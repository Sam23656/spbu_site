import React, { useState, useEffect, useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import MaintenancePage from '../pages/MaintenancePage';

interface MaintenanceData {
  is_active: boolean;
  title: string;
  message: string;
  start_time: string;
  estimated_end_time: string;
  remaining_time: number | null;
  is_expired: boolean;
}

interface MaintenanceCheckProps {
  children: React.ReactNode;
}

const MaintenanceCheck: React.FC<MaintenanceCheckProps> = ({ children }) => {
  const [maintenanceData, setMaintenanceData] = useState<MaintenanceData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [apiAvailable, setApiAvailable] = useState(false);
  const navigate = useNavigate();

  const checkMaintenanceStatus = useCallback(async () => {
    try {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å —Ç–µ—Ö. —Ä–∞–±–æ—Ç...');
      
      const response = await fetch('http://localhost:8000/api/maintenance/status/', {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
        },
      });
      
      console.log('üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
      
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      
      const contentType = response.headers.get('content-type');
      if (!contentType || !contentType.includes('application/json')) {
        console.warn(`‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${contentType}, –ø–æ–∫–∞–∑—ã–≤–∞—é –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É`);
        setLoading(false);
        return;
      }
      
      const data = await response.json();
      console.log('üìä –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:', data);
      
      setMaintenanceData(data);
      setError(null);
      setApiAvailable(true);
      
      // –ï—Å–ª–∏ —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ—Ö. —Ä–∞–±–æ—Ç
      if (data.is_active) {
        console.log('üîß –¢–µ—Ö. —Ä–∞–±–æ—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é –Ω–∞ /maintenance');
        navigate('/maintenance');
      } else {
        console.log('‚úÖ –¢–µ—Ö. —Ä–∞–±–æ—Ç—ã –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞—é –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
      }
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ—Ö. —Ä–∞–±–æ—Ç:', err);
      setError(err instanceof Error ? err.message : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
      setApiAvailable(false);
      
      // –ü—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      console.warn('‚ö†Ô∏è –ü–æ–∫–∞–∑—ã–≤–∞—é –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏');
    } finally {
      setLoading(false);
    }
  }, [navigate]);

  useEffect(() => {
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π
    const timer = setTimeout(() => {
      checkMaintenanceStatus();
    }, 100);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    const interval = setInterval(() => checkMaintenanceStatus(), 5000);
    
    return () => {
      clearTimeout(timer);
      clearInterval(interval);
    };
  }, [checkMaintenanceStatus]);

  // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  if (loading) {
    console.log('–ó–∞–≥—Ä—É–∑–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞—é –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
    return <>{children}</>;
  }

  // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  if (error || !apiAvailable) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞—é –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
    return <>{children}</>;
  }

  // –ï—Å–ª–∏ —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ—Ö. —Ä–∞–±–æ—Ç
  if (maintenanceData?.is_active) {
    console.log('–ü–æ–∫–∞–∑—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ—Ö. —Ä–∞–±–æ—Ç');
    return <MaintenancePage />;
  }

  // –ï—Å–ª–∏ —Ç–µ—Ö. —Ä–∞–±–æ—Ç—ã –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  console.log('–ü–æ–∫–∞–∑—ã–≤–∞—é –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
  return <>{children}</>;
};

export default MaintenanceCheck;
