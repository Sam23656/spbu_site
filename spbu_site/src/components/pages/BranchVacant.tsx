import React, { useContext } from 'react';
import { LanguageContext } from '../../contexts/LanguageContext';
import { Language } from '../../contexts/LanguageContextType';
import './BranchVacant.scss';

type Translations = {
  [key in Language]: {
    title: string;
    subtitle: string;
    empty: string;
  };
};

const translations: Translations = {
  ru: {
    title: '–í–∞–∫–∞–Ω—Ç–Ω—ã–µ –º–µ—Å—Ç–∞ –¥–ª—è –ø—Ä–∏–µ–º–∞ (–ø–µ—Ä–µ–≤–æ–¥–∞) –æ–±—É—á–∞—é—â–∏—Ö—Å—è',
    subtitle: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –≤–∞–∫–∞–Ω—Ç–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è –ø—Ä–∏—ë–º–∞ (–ø–µ—Ä–µ–≤–æ–¥–∞)',
    empty: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
  },
  uz: {
    title: "Qabul (ko'chirish) uchun bo'sh o'rinlar",
    subtitle: "Qabul (ko'chirish) uchun bo'sh o'rinlar soni haqida ma'lumot",
    empty: 'Mavjud emas',
  },
  en: {
    title: 'Vacant places for admission (transfer)',
    subtitle: 'Information on the number of vacant places for admission (transfer)',
    empty: 'Absent',
  },
};

const BranchVacant: React.FC = () => {
  const langContext = useContext(LanguageContext);
  if (!langContext) throw new Error('BranchVacant must be used within Language Provider');
  const { language } = langContext;
  const t = translations[language];

  return (
    <div className="branch-common">
      <div className="content-container">
        <div className="main-header">
          <span className="main-header-icon">üìã</span>
          <h1 className="main-title">{t.title}</h1>
        </div>

        <div className="info-section vacant-block">
          <h2 className="section-title centered-title">{t.subtitle}</h2>
          <div className="table-container">
            <div className="table-wrapper">
              <table className="info-table vacant-table" role="table">
                <thead>
                  <tr>
                    <th rowSpan={2}>–ö–æ–¥ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏, —à–∏—Ñ—Ä –≥—Ä—É–ø–ø—ã –Ω–∞—É—á–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π</th>
                    <th rowSpan={2}>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏, —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏, –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –Ω–∞—É—á–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π</th>
                    <th rowSpan={2}>–£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è</th>
                    <th rowSpan={2}>–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å, –ø—Ä–æ—Ñ–∏–ª—å, —à–∏—Ñ—Ä –∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –Ω–∞—É—á–Ω–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</th>
                    <th rowSpan={2}>–ö—É—Ä—Å</th>
                    <th rowSpan={2}>–§–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è</th>
                    <th colSpan={4} className="group-head">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Ç–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ (–ø–µ—Ä–µ–≤–æ–¥–∞) –Ω–∞ –º–µ—Å—Ç–∞, —Ñ–∏–Ω–∞–Ω—Å–∏—Ä—É–µ–º—ã–µ –∑–∞ —Å—á–µ—Ç</th>
                  </tr>
                  <tr className="subhead">
                    <th>–±—é–¥–∂–µ—Ç–Ω—ã—Ö –∞—Å—Å–∏–≥–Ω–æ–≤–∞–Ω–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞</th>
                    <th>–±—é–¥–∂–µ—Ç–æ–≤ —Å—É–±—ä–µ–∫—Ç–æ–≤ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏</th>
                    <th>–º–µ—Å—Ç–Ω—ã—Ö –±—é–¥–∂–µ—Ç–æ–≤</th>
                    <th>–ø–æ –¥–æ–≥–æ–≤–æ—Ä–∞–º –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –∑–∞ —Å—á–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –∏ (–∏–ª–∏) —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    {Array.from({ length: 10 }).map((_, i) => (
                      <td key={i}>{t.empty}</td>
                    ))}
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default BranchVacant;


